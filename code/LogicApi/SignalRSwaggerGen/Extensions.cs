using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Routing;
using Microsoft.AspNetCore.SignalR;
using SignalRSwaggerGen.Attributes;
using Swashbuckle.AspNetCore.SwaggerUI;
using System.Linq;
using System.Reflection;

namespace SignalRSwaggerGen
{
    public static class Extensions
    {
        private const string JsInjection = "const scriptTagsToLoad=[\"https://code.jquery.com/jquery-3.6.1.min.js\",\"https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js\",\"/swagger/extensions/SignalRSwaggerExtension\",];for(const scriptLink of scriptTagsToLoad){let o=document.createElement(\"script\");o.defer=!0,o.src=scriptLink,document.head.appendChild(o)}let css=\".opblock[data-opblock-hub=send]{--strong-color:#80007e;--transparent-color:rgba(254,97,248,.1)}.opblock[data-opblock-hub=listen]{--strong-color:#ffd600;--transparent-color:rgba(255,240,0,.1)}.opblock[data-opblock-hub]{border-color:var(--strong-color)!important;background:var(--transparent-color)!important}.opblock[data-opblock-hub] .opblock-summary-method,.opblock[data-opblock-hub] span::after{background:var(--strong-color)!important}.opblock[data-opblock-hub] .execute:not(.cloned){display:none}\",cssElement=document.createElement(\"style\");cssElement.innerHTML=css,document.head.appendChild(cssElement);\r\n";
        private const string JsFunctionality = "class CustomMutationObserver{mutationListener;targetNode;addedListener;removedListener;subtree=!1;constructor(e,t,s){this.targetNode=e,this.addedListener=t,this.removedListener=s}withSubtree(){this.subtree=!0}start(){if(null!=this.mutationListener)return;let e=(e,t)=>{for(let s of e){if(\"function\"==typeof this.addedListener)for(let r of s.addedNodes)this.addedListener(r);if(\"function\"==typeof this.removedListener)for(let n of s.removedNodes)this.removedListener(n)}};this.mutationListener=new MutationObserver(e),this.mutationListener.observe(this.targetNode,{childList:!0,subtree:this.subtree})}close(){this.mutationListener.disconnect()}}class SignalRBodyExecuteWrapper{#a=\"cloned\";#b=\"btn-group\";#c=\"execute-wrapper\";#d=\"execute\";#e=\"btn-clear\";executeWrapper;mutationListener;constructor(e){e.innerHTML,this.executeWrapper=e.querySelector(`.${this.#c}`),null==this.executeWrapper&&(this.executeWrapper=e.querySelector(`.${this.#b}`)),this.#f()}#f(){this.mutationListener=new CustomMutationObserver(this.executeWrapper,e=>this.buttonAdded(e),e=>this.buttonRemoved(e)),this.mutationListener.start();let e=this.executeWrapper.querySelector(`.${this.#d}`);null!=e&&this.addCloneButton(e)}close(){this.closed(),this.mutationListener.close(),this.removeClearButton(),this.removeCloneButton()}buttonAdded(e){!e.classList.contains(this.#a)&&e.classList.contains(this.#d)&&this.addCloneButton(e)}buttonRemoved(e){!e.classList.contains(this.#a)&&e.classList.contains(this.#d)&&(this.cleared(),this.removeCloneButton(),this.removeClearButton())}addCloneButton(){if(null!=this.executeWrapper.querySelector(`.${this.#a}`))return;let e=document.createElement(\"button\");e.setAttribute(\"class\",\"btn execute opblock-control__btn\"),e.classList.add(this.#a),e.textContent=\"Execute\",e.onclick=()=>{this.addClearButton(),this.executed()},this.executeWrapper.appendChild(e)}removeCloneButton(){let e=this.executeWrapper.querySelector(`.${this.#a}`);null!=e&&this.executeWrapper.removeChild(e)}checkClearButtonExist(){return null!=this.executeWrapper.querySelector(`.${this.#e}`)}addClearButton(){if(this.checkClearButtonExist())return;let e=document.createElement(\"button\");e.setAttribute(\"class\",\"btn btn-clear opblock-control__btn\"),e.textContent=\"Clear\",e.onclick=()=>{this.cleared(),this.removeClearButton(!0)},this.executeWrapper.appendChild(e),this.executeWrapper.classList.add(this.#b),this.executeWrapper.classList.remove(this.#c)}removeClearButton(){let e=this.executeWrapper.querySelector(`.${this.#e}`);null!=e&&(this.executeWrapper.removeChild(e),this.executeWrapper.classList.remove(this.#b),this.executeWrapper.classList.add(this.#c),this.closed())}isExpanded(){return this.executeWrapper.classList.contains(this.#b)}closed(){}cleared(){}executed(){}}class SignalRHubSwagger{opblockTagSection;name;pathSwaggers=[];mutationObserver;constructor(e){this.opblockTagSection=e,this.name=null}#g(t){let s=t.querySelectorAll(\".opblock\");for(let r of s){let n=new SignalRPathSwagger(r);this.pathSwaggers.push(n)}}startSetup(){this.#g(this.opblockTagSection),this.mutationObserver=new CustomMutationObserver(this.opblockTagSection,e=>this.#g(e),()=>this.#h()),this.mutationObserver.start()}close(){this.mutationObserver.close(),this.#h()}#h(){for(let i of this.pathSwaggers)i.close();this.pathSwaggers=[]}setupOpblocks(){this.#h();let e=this.opblockTagSection.querySelectorAll(\".opblock\");for(let t of e){let s=new SignalRHubOpblockSwagger(t);this.pathSwaggers.push(s)}}getName(){if(null==this.name){let e=this.opblockTagSection.querySelector(\"h3 > a > span\");this.name=e.textContent}return this.name}isOpen(){return this.opblockTagSection.classList.contains(\"is-open\")}}class SignalRParameterSwagger{parameterType;subStype;valueTd;constructor(e){this.valueTd=e.querySelector(\".parameters-col_description\");let t=e.querySelector(\".parameter__type\").textContent;t.indexOf(\"(\")>=0?(this.parameterType=t.substring(0,t.indexOf(\"(\")),this.subStype=t.substring(t.indexOf(\"(\")+2),this.subStype=this.subStype.substring(0,this.subStype.indexOf(\")\"))):(this.parameterType=t,this.subStype=\"double\")}#i(o,a){if(\"string\"===o)return a.querySelector(\"input\").value;if(\"integer\"===o){let l=a.querySelector(\"input\").value;return isNaN(l)?-1:parseInt(l,10)}if(\"number\"===o){if(\"double\"===this.subStype){let c=a.querySelector(\"input\").value;return isNaN(c)?-1:parseFloat(c)}if(\"float\"!==this.subStype)return 0;{let p=a.querySelector(\"input\").value;if(isNaN(p))return -1;let h=parseFloat(p),u=new DataView(new ArrayBuffer(4));return u.setFloat32(0,h),u.getFloat32()}}if(\"boolean\"===o)return\"true\"===a.querySelector(\"select\").value;if(\"object\"===o){let d=a.querySelector(\"textarea\").value;try{return JSON.parse(d)}catch(g){}}else if(o.startsWith(\"array\")){let b=o.substring(o.indexOf(\"[\")+1);if(\"array\"===(b=b.substring(0,b.indexOf(\"]\"))))return 0;let m=a.querySelectorAll(\".json-schema-form-item\"),S=[];for(let x of m){let C=this.#i(b,x);S.push(C)}return S}return null}getValue(){return this.#i(this.parameterType,this.valueTd)}}class SignalRPathListenerSwagger{opblockBodyElement;path;executeWrapper;responseWrapper;mutationListener;signalrConnection;constructor(e,t){e.innerHTML,this.opblockBodyElement=e,this.path=t,this.#f()}#f(){this.executeWrapper=new SignalRBodyExecuteWrapper(this.opblockBodyElement),this.executeWrapper.cleared=()=>this.cleared(),this.executeWrapper.executed=()=>this.execute(),this.executeWrapper.closed=()=>this.stopExecute(),this.responseWrapper=new SignalRResponseWrapper(this.opblockBodyElement,{methodDecoration:\"Listening on\",responseStatusCode:\"Listening...\",description:\"Getting continous response... to stop, press 'Clear'\",headerLine:\"Listening...\"})}close(){this.executeWrapper.close()}execute(){let e=document.createElement(\"div\");e.classList.add(\"loading-container\"),e.innerHTML='<div class=\"loading\"></div>',this.opblockBodyElement.insertBefore(e,this.opblockBodyElement.children[2]);let t=this.path.lastIndexOf(\"/\"),s=this.path.substring(0,t),r=this.path.substring(t+1),n=location.origin+s;null!=this.signalrConnection&&this.signalrConnection.stop(),this.signalrConnection=new signalR.HubConnectionBuilder().withUrl(n).configureLogging(signalR.LogLevel.Information).build();try{this.signalrConnection.start(),e.remove(),this.responseWrapper.resetToExecute(s,r,!1),this.signalrConnection.on(r,(...e)=>this.responseWrapper.addMessageToResponse(e))}catch(i){e.remove(),this.responseWrapper.resetToExecute(s,r,!0),this.responseWrapper.addMessageToResponse([i])}}stopExecute(){null!=this.signalrConnection&&this.signalrConnection.stop()}cleared(){this.responseWrapper.resetToDefault()}}class SignalRPathSenderSwagger{opblockBodyElement;path;executeWrapper;responseWrapper;mutationListener;constructor(e,t){e.innerHTML,this.opblockBodyElement=e,this.path=t,this.#f()}#f(){this.executeWrapper=new SignalRBodyExecuteWrapper(this.opblockBodyElement),this.executeWrapper.cleared=()=>this.cleared(),this.executeWrapper.executed=()=>this.execute(),this.responseWrapper=new SignalRResponseWrapper(this.opblockBodyElement,{methodDecoration:\"Sending to\",responseStatusCode:\"Sending...\",description:\"Sending message to the hub\",headerLine:\"Sending...\"})}close(){this.executeWrapper.close()}async execute(){let e=document.createElement(\"div\");e.classList.add(\"loading-container\"),e.innerHTML='<div class=\"loading\"></div>',this.opblockBodyElement.insertBefore(e,this.opblockBodyElement.children[2]);let t=this.path.lastIndexOf(\"/\"),s=this.path.substring(0,t),r=this.path.substring(t+1).trim(),n=location.origin+s,i=new signalR.HubConnectionBuilder().withUrl(n).configureLogging(signalR.LogLevel.Information).build();try{await i.start(),e.remove(),this.responseWrapper.resetToExecute(s,r,!1);let o=this.#j(),a=o.join(\", \");o.unshift(r),i.invoke.apply(i,o),this.responseWrapper.addMessageToResponse([`Sent to ${r}!`]),this.responseWrapper.addMessageToResponse([`Values ${a}`])}catch(l){e.remove(),this.responseWrapper.resetToExecute(s,r,!0),this.responseWrapper.addMessageToResponse([l])}setTimeout(()=>{null!=i&&i.stop()},100)}cleared(){this.responseWrapper.resetToDefault()}#j(){let L=[],y=this.opblockBodyElement.querySelectorAll(\"table.parameters tbody tr\");for(let v of y){let f=new SignalRParameterSwagger(v).getValue();L.push(f)}return L}}class SignalRPathSwagger{opblock;#k;isListener;pathListener;pathSender;mutationListener;constructor(e){this.opblock=e,this.#k=null,this.#f()}#f(){let w=this.opblock.querySelector(\".opblock-summary-method\"),W=w.textContent,k=this.opblock;\"GET\"===W?(this.isListener=!0,k.setAttribute(\"data-opblock-hub\",\"listen\"),w.textContent=\"LISTEN\",this.#l()):(this.isListener=!1,k.setAttribute(\"data-opblock-hub\",\"send\"),w.textContent=\"SEND\",this.#m()),this.mutationListener=new CustomMutationObserver(this.opblock,e=>{\"noscript\"!==e.tagName.toLowerCase()&&(this.isListener?this.#l():this.#m())},e=>{\"noscript\"!==e.tagName.toLowerCase()&&(this.isListener?this.pathListener.close():this.pathSender.close())}),this.mutationListener.start()}#l(){let E=this.opblock.querySelector(\".opblock-body\");null!=E&&(this.pathListener=new SignalRPathListenerSwagger(E,this.getPath()))}#m(){let T=this.opblock.querySelector(\".opblock-body\");null!=T&&(this.pathSender=new SignalRPathSenderSwagger(T,this.getPath()))}close(){this.mutationListener.close(),null!=this.pathListener&&this.pathListener.close(),null!=this.pathSender&&this.pathSender.close()}getPath(){if(null==this.#k){let e=this.opblock.querySelector(\".opblock-summary-path\");this.#k=e.getAttribute(\"data-path\")}return this.#k}isExpanded(){return this.opblock.classList.contains(\"is-open\")}}class SignalRResponseWrapper{#n=\"responses-wrapper\";#o='<div> <div> <div> <div class=\"request-url\"> <h4>Request URL</h4> <pre class=\"microlight\"> https://localhost:7229/hubs/serverpark/Receive </pre> </div></div><h4>Server response</h4> <table class=\"responses-table live-responses-table\"> <thead> <tr class=\"responses-header\"> <td class=\"col_header response-col_status\"> Code </td><td class=\"col_header response-col_description\"> Details </td></tr></thead> <tbody> <tr class=\"response\"> <td class=\"response-col_status\"> 404 </td><td class=\"response-col_description\"> <div> <h5>Getting continous response... to stop, press \\'Clear\\'</h5> <pre class=\"microlight\"> <span class=\"headerline\">heelo</span> </pre> </div></td></tr></tbody> </table> </div></div>';responsesElement;responsesInnerElement;responseTextContainer;mutationListener;config;constructor(e,t){this.config=t;let s=e.querySelector(`.${this.#n}`);if(null!=s){this.#f(s);return}this.mutationListener=new CustomMutationObserver(e,e=>{e.classList.contains(this.#n)&&this.#f(e)}),this.mutationListener.start()}#f(B){this.responsesElement=B,this.responsesInnerElement=this.responsesElement.querySelector(\".responses-inner\"),this.responsesElement.querySelector(\".responses-table\").remove(),null!=this.mutationListener&&this.mutationListener.close()}resetToDefault(){this.responsesInnerElement.innerHTML=\"\"}resetToExecute(e,t,s){this.responsesInnerElement.innerHTML=this.#o;this.responsesInnerElement.querySelector(\".request-url .microlight\").textContent=`Hub: '${location.origin}${e}'  |  ${this.config.methodDecoration}: '${t}'`;let r=this.responsesInnerElement.querySelector(\".response\"),n=r.querySelector(\".response-col_status\"),i=r.querySelector(\".response-col_description h5\");this.responseTextContainer=r.querySelector(\".response-col_description .microlight\"),s?(n.textContent=\"FAILED\",i.textContent=\"This request has failed, please try again!\",this.responseTextContainer.innerHTML=\"\"):(n.textContent=this.config.responseStatusCode,i.textContent=this.config.description,this.responseTextContainer.innerHTML=`<span class=\"headerline\">${this.config.headerLine}</span>`)}addMessageToResponse(e){if(null==this.responseTextContainer)return;let t=document.createElement(\"span\");t.classList.add(\"headerline\");let s=e.join(\" | \");t.textContent=s,this.responseTextContainer.appendChild(t)}}class SignalRSwaggerSetup{swaggerUINode;swaggerHubs=[];mutationObserver;constructor(){this.swaggerUINode=document.querySelector(\"div.swagger-ui\");let e=this.swaggerUINode.querySelectorAll(\".opblock-tag-section\");null!=e&&e.length>0&&this.#p(e),this.mutationObserver=new CustomMutationObserver(this.swaggerUINode,e=>{let t=e.querySelectorAll(\".opblock-tag-section\");null!=t&&t.length>0&&this.#p(t)}),this.mutationObserver.start()}close(){this.mutationObserver.close(),this.#q()}#q(){for(let q of this.swaggerHubs)q.close();this.swaggerHubs=[]}#p(R){for(let O of(this.#q(),R)){let M=new SignalRHubSwagger(O);M.getName().endsWith(\"Hub\")&&(this.swaggerHubs.push(M),M.startSetup())}}}!function(){let e=null,t=document.querySelector(\"#swagger-ui\"),s=new CustomMutationObserver(t,t=>{t.classList.contains(\"wrapper\")&&null==e&&(e=new SignalRSwaggerSetup,s.close())});s.withSubtree(),s.start()}();";

        
        /// <summary>
        /// Maps all the hubs to the specified route if a RouteAttribute is applied to the hub.
        /// </summary>
        /// <param name="app"></param>
        public static void MapHubs(this IEndpointRouteBuilder app)
        {
            var hubs = (Assembly.GetEntryAssembly() ?? Assembly.GetCallingAssembly()).DefinedTypes.Where(type => type.BaseType == typeof(Hub)).ToList();

            if (!hubs.Any())
                return;

            MethodInfo method = typeof(HubEndpointRouteBuilderExtensions)
                        .GetMethods()
                        .Where(m => m.IsGenericMethod)
                        .Where(m => m.Name == nameof(HubEndpointRouteBuilderExtensions.MapHub))
                        .Where(m => m.GetParameters().Length == 2)
                        .First();


            foreach (var hubType in hubs)
            {
                var route = hubType.GetCustomAttribute<SignalRHubAttribute>();
                string? path = route?.Path;

                if (path is not null)
                {
                    if (!path.StartsWith("/"))
                        path = "/" + path;

                    MethodInfo generic = method.MakeGenericMethod(hubType);
                    generic.Invoke(app, new object[] { app, path });
                }
            }
        }

        /// <summary>
        /// Maps the required signalr endpoints to the swagger so it can generate the correct documentation.
        /// </summary>
        /// <param name="app"></param>
        public static void MapSignalrExtensions(this IEndpointRouteBuilder app)
        {
            app.MapGet("/swagger/extensions/SignalRSwaggerSetup", () => JsInjection);
            app.MapGet("/swagger/extensions/SignalRSwaggerExtension", () => JsFunctionality);
        }

        public static SwaggerUIOptions AddSignalRFunctionality(this SwaggerUIOptions options)
        {
            options.InjectJavascript("/swagger/extensions/SignalRSwaggerSetup");
            return options;
        } 
    }
}
