{
  "openapi": "3.0.1",
  "info": {
    "title": "Prismarine RESTful Web API",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Generates a Bearer token and returns it.",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIModel.DTOs.LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a APIModel.Responses.AuthenticatedResponse object with the token included.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.AuthenticatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "If the authentication fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/Discord/token/{id}": {
      "get": {
        "tags": [
          "Discord"
        ],
        "summary": "Gets the user token for by a Discord Id. (Auth policies: DiscordBot)",
        "operationId": "GetWebAccessToken",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Discord Id of the user.",
            "required": true,
            "schema": {
              "pattern": "\\d{18}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a APIModel.Responses.UserTokenResponse object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.UserTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "If the user does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              "DiscordBot"
            ]
          }
        ]
      }
    },
    "/api/v1/Discord/user": {
      "post": {
        "tags": [
          "Discord"
        ],
        "summary": "Register a discord user to the system. (Auth policies: DiscordBot)",
        "operationId": "RegisterUser",
        "requestBody": {
          "description": "Registered user data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIModel.DTOs.UserDataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns Ok 200."
          },
          "400": {
            "description": "If the DiscordName or the ProfilePic is null.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              "DiscordBot"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Discord"
        ],
        "summary": "Refreshes a user's data. (Auth policies: DiscordBot)",
        "operationId": "RefreshUser",
        "requestBody": {
          "description": "Data of the user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIModel.DTOs.UserDataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns Ok 200."
          },
          "400": {
            "description": "If the DiscordName or the ProfilePic is null, or the user is not registered.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              "DiscordBot"
            ]
          }
        ]
      }
    },
    "/api/v1/Icons": {
      "get": {
        "tags": [
          "Icons"
        ],
        "summary": "Gets all the available icons",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Icons"
        ],
        "summary": "Uploads a new icon to the server (Auth)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedPublic.DTOs.IconUploadDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Icons/{name}": {
      "delete": {
        "tags": [
          "Icons"
        ],
        "summary": "Deletes an existing icon. (Auth)",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/MinecraftServer/{id}": {
      "get": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Gets the informations of a server. (Auth)",
        "operationId": "GetServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the server.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested server object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedPublic.Model.IMinecraftServer"
                }
              }
            }
          },
          "400": {
            "description": "The server with the specified id does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Deletes a server from the system. (Auth)",
        "operationId": "DeleteServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the server",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The server is deleted. Nothing more."
          },
          "400": {
            "description": "The server with the specified id does not exist or an exception happened during the deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Modifies the server information. (Auth)",
        "operationId": "ModifyServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the server to modify",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "new values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedPublic.DTOs.ModifyServerDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The server is deleted. Nothing more."
          },
          "400": {
            "description": "The server with the specified id does not exist or an exception happened during the deletion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/MinecraftServer/{id}/commands": {
      "post": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Writes a command to the server. (Auth)",
        "operationId": "WriteCommandToServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the minecraft server",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "command data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIModel.DTOs.CommandDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The command is executed."
          },
          "400": {
            "description": "The server with the specified id does not exist or an exception happened during the command execution.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/MinecraftServer/{id}/toggle": {
      "post": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Toggles the minecraft server on and off. (Auth)",
        "operationId": "ToggleServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the minecraft server.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The server is either started or deleted, depending on the state of it."
          },
          "400": {
            "description": "The server with the specified id does not exist or an exception happened during the toggle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/MinecraftServer/{id}/backups": {
      "post": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Backs up the server. (Auth)",
        "operationId": "BackupServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedPublic.DTOs.BackupDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Gets all the backups of a server. (Auth)",
        "operationId": "GetBackups",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SharedPublic.Model.IBackup"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/MinecraftServer/{id}/backups/{backupName}": {
      "delete": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Deletes a backup of a server. (Auth)",
        "operationId": "DeleteBackup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "pattern": "^[\\w\\W]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Restores a backup of a server. (Auth)",
        "operationId": "RestoreBackup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "backupName",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "pattern": "^[\\w\\W]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/MinecraftServer/{id}/properties": {
      "get": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Gets all the properties of a server (Auth)",
        "operationId": "GetProperties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Modifies the server properties (Auth)",
        "operationId": "ModifyProperties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedPublic.DTOs.MinecraftServerPropertiesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/MinecraftServer/{id}/icon": {
      "get": {
        "tags": [
          "MinecraftServer"
        ],
        "summary": "Gets the icon of the server. (Auth)",
        "operationId": "GetIcon",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Permission/{id}/grant": {
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Grants permission to a user. Note: the user must have been registered before. (Auth)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "pattern": "\\d{18}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If the request got successfully handled."
          },
          "400": {
            "description": "An exception has been occured during the process.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/Permission/{id}/revoke": {
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Revokes permission from a user. Note: the user must have been registered before. (Auth)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "pattern": "\\d{18}",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "If the request got successfully handled."
          },
          "400": {
            "description": "An exception has been occured during the process.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/ServerPark": {
      "get": {
        "tags": [
          "ServerPark"
        ],
        "summary": "Gets all the minecraft servers from the system. (Auth)",
        "operationId": "GetAllServers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SharedPublic.Model.IMinecraftServer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "ServerPark"
        ],
        "summary": "Creates a server. (Auth)",
        "operationId": "CreateServer",
        "requestBody": {
          "description": "data which are required to create the server",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APIModel.DTOs.ServerCreationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedPublic.Model.IMinecraftServer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/ServerPark/running": {
      "get": {
        "tags": [
          "ServerPark"
        ],
        "summary": "Gets the currently running server (Auth)",
        "operationId": "GetRunningServer",
        "responses": {
          "200": {
            "description": "Returns the currently running server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedPublic.Model.IMinecraftServer"
                }
              }
            }
          },
          "400": {
            "description": "If there is no running server currently.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIModel.Responses.ExceptionDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v1/ServerPark/versions": {
      "get": {
        "tags": [
          "ServerPark"
        ],
        "summary": "Gets all the available minecraft versions. (Auth)",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Application.Minecraft.Versions.IMinecraftVersion"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ServerPark"
        ],
        "summary": "Checks the internet if there are any new versions available, if yes, then adds them to the collection. (Auth)",
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "APIModel.DTOs.CommandDto": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "APIModel.DTOs.LoginDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "platform": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "APIModel.DTOs.ServerCreationDto": {
        "required": [
          "newName"
        ],
        "type": "object",
        "properties": {
          "newName": {
            "maxLength": 35,
            "minLength": 4,
            "type": "string",
            "default": "My new server"
          },
          "version": {
            "type": "string",
            "default": "1.19.2",
            "nullable": true
          },
          "serverIcon": {
            "type": "string",
            "nullable": true
          },
          "properties": {
            "$ref": "#/components/schemas/SharedPublic.DTOs.MinecraftServerCreationPropertiesDto"
          }
        },
        "additionalProperties": false
      },
      "APIModel.DTOs.UserDataDto": {
        "required": [
          "discordName",
          "id",
          "profilePic"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "discordName": {
            "minLength": 1,
            "type": "string"
          },
          "profilePic": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "APIModel.Responses.AuthenticatedResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "APIModel.Responses.ExceptionDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isInternalException": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "APIModel.Responses.UserTokenResponse": {
        "type": "object",
        "properties": {
          "userToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Application.Minecraft.Versions.IMinecraftVersion": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "version": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "releaseDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "downloadUrl": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDownloaded": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SharedPublic.DTOs.BackupDto": {
        "type": "object",
        "properties": {
          "backupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SharedPublic.DTOs.IconUploadDto": {
        "type": "object",
        "properties": {
          "iconName": {
            "type": "string",
            "nullable": true
          },
          "iconData": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SharedPublic.DTOs.MinecraftServerCreationPropertiesDto": {
        "type": "object",
        "properties": {
          "allowFlight": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "difficulty": {
            "type": "string",
            "default": "normal",
            "nullable": true
          },
          "enableCommandBlock": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "enforceSecureProfile": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "gamemode": {
            "type": "string",
            "default": "survival",
            "nullable": true
          },
          "hardcore": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "maxWorldSize": {
            "maximum": 29999984,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 29999984,
            "nullable": true
          },
          "motd": {
            "maxLength": 59,
            "type": "string",
            "default": "A Minecraft Server",
            "nullable": true
          },
          "pvp": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "simulationDistance": {
            "maximum": 32,
            "minimum": 3,
            "type": "integer",
            "format": "int32",
            "default": 10,
            "nullable": true
          },
          "spawnMonsters": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "spawnProtection": {
            "maximum": 30000,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "nullable": true
          },
          "viewDistance": {
            "maximum": 32,
            "minimum": 3,
            "type": "integer",
            "format": "int32",
            "default": 10,
            "nullable": true
          },
          "whiteList": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "levelSeed": {
            "maxLength": 100,
            "type": "string",
            "default": "",
            "nullable": true
          },
          "levelType": {
            "type": "string",
            "default": "minecraft:normal",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SharedPublic.DTOs.MinecraftServerPropertiesDto": {
        "type": "object",
        "properties": {
          "allowFlight": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "difficulty": {
            "type": "string",
            "default": "normal",
            "nullable": true
          },
          "enableCommandBlock": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "enforceSecureProfile": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "gamemode": {
            "type": "string",
            "default": "survival",
            "nullable": true
          },
          "hardcore": {
            "type": "boolean",
            "default": false,
            "nullable": true
          },
          "maxWorldSize": {
            "maximum": 29999984,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "default": 29999984,
            "nullable": true
          },
          "motd": {
            "maxLength": 59,
            "type": "string",
            "default": "A Minecraft Server",
            "nullable": true
          },
          "pvp": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "simulationDistance": {
            "maximum": 32,
            "minimum": 3,
            "type": "integer",
            "format": "int32",
            "default": 10,
            "nullable": true
          },
          "spawnMonsters": {
            "type": "boolean",
            "default": true,
            "nullable": true
          },
          "spawnProtection": {
            "maximum": 30000,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0,
            "nullable": true
          },
          "viewDistance": {
            "maximum": 32,
            "minimum": 3,
            "type": "integer",
            "format": "int32",
            "default": 10,
            "nullable": true
          },
          "whiteList": {
            "type": "boolean",
            "default": false,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SharedPublic.DTOs.ModifyServerDto": {
        "type": "object",
        "properties": {
          "newName": {
            "maxLength": 35,
            "minLength": 4,
            "type": "string",
            "default": null,
            "nullable": true
          },
          "version": {
            "type": "string",
            "default": null,
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SharedPublic.Enums.BackupType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "SharedPublic.Model.IBackup": {
        "type": "object",
        "properties": {
          "serverId": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/SharedPublic.Enums.BackupType"
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SharedPublic.Model.ILogMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "messageType": {
            "$ref": "#/components/schemas/SharedPublic.Model.LogMessageType"
          }
        },
        "additionalProperties": false
      },
      "SharedPublic.Model.IMinecraftPlayer": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "onlineFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "pastOnline": {
            "$ref": "#/components/schemas/System.TimeSpan"
          }
        },
        "additionalProperties": false
      },
      "SharedPublic.Model.IMinecraftServer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "serverName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "statusCode": {
            "$ref": "#/components/schemas/SharedPublic.Model.ServerStatus"
          },
          "statusMessage": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isRunning": {
            "type": "boolean",
            "readOnly": true
          },
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharedPublic.Model.ILogMessage"
            },
            "nullable": true,
            "readOnly": true
          },
          "onlineFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "onlinePlayers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharedPublic.Model.IMinecraftPlayer"
            },
            "nullable": true,
            "readOnly": true
          },
          "players": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SharedPublic.Model.IMinecraftPlayer"
            },
            "nullable": true,
            "readOnly": true
          },
          "storageSpace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "storageBytes": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "mcVersion": {
            "$ref": "#/components/schemas/Application.Minecraft.Versions.IMinecraftVersion"
          }
        },
        "additionalProperties": false
      },
      "SharedPublic.Model.LogMessageType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "SharedPublic.Model.ServerStatus": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      },
      "System.TimeSpan": {
        "type": "object",
        "properties": {
          "ticks": {
            "type": "integer",
            "format": "int64"
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "milliseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "microseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "nanoseconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "seconds": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "totalDays": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalHours": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMilliseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMicroseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalNanoseconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalMinutes": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalSeconds": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Standard Authorization header using the Bearer scheme (JWT). Example: \"bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}